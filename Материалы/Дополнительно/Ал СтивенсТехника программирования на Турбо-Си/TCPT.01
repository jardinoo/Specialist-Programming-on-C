
                                                     Сентябрь, 1987
                                                Меррит Айленд, Флорида



                             ГЛАВА 1
                             -------

                 Интерактивное программное обеспечение,
                 управляющее изображением на экране
     ------------------------------------------------------------------

          Большинство программ для PC,  пользующихся в настоящее время
     наибольшим спросом, рассчитаны на интерактивный режим работы, при
     котором  пользователь  обменивается  с  ЭВМ  сообщениями  в  виде
     последовательностей   нажатий клавиш на клавиатуре и  символов на
     экране дисплея. При этом программы вывода сообщений  пользователю
     широко используют  возможности  видеотерминала  РС.  Пользователь
     реагирует  на  это набором на  клавиатуре  соответствующих слов и
     чисел.  Такой способ общения  с ЭВМ стал  естественным для нового
     поколения  пользователей.    Он   подразумевает   развитие  стиля
     отображения   и   ввода информации   в  ЭВМ,   который называется
     "смотреть и чувствовать"  и постоянно используется  и развивается
     программистами.  Французский  язык,  Кобол,  код  Морзе  являются
     средствами общения,  для общения с ЭВМ также  нужен  язык.  Можно
     считать,   что каждая  новая программа является  новым языком или
     диалектом  уже существующего.  И поскольку в  данном  случае язык
     служит для взаимодействия с ЭВМ, то повышение  его  эффективности
     способствует более полному соответствию  намерений пользователя и
     действий ЭВМ.

          Эти языки,  как правило,  не разрабатываются  специально,  а
     возникают сами по себе в процессе создания программы. Программист
     озабочен  обычно  другими  проблемами:  средой  программирования,
     структурами   данных,  функциональными  алгоритмами,  интерфейсом
     пользователя.  После завершения разработки программы  программист
     вводит  в  нее  запросы  к  пользователю  и сообщения об ошибках.
     Качество пользовательского интерфейса программы зависит  от  воли
     программиста  и  наличия  программных  средств,  которые помогают
     разрабатывать пользовательский интерфейс.

          Программисты могут    использовать    множество    различных
     технологий  для  организации  обмена  между ПЭВМ и пользователем.
     Каждая из  этих  технологий  имеет  свои  области  применения,  в
     которых  она  более  предпочтительна,  чем  другие.  Но  все  эти
     технологии имеют одну общую цель:  они обеспечивают средства  для
     передачи  пользователю  предназначенной для него информации и для
     ввода информации им.

          Одна из  наиболее  простых  проблем,  с  которой  вы   могли
     сталкиваться в своей практике,  заключается в организации ввода и
     вывода алфавитно-цифровой информации.  Вы можете использовать для
     этой  цели  функции printf и scanf и этим ограничиться.  Если ЭВМ
     включает в свой состав консольный  терминал  с  клавиатурой  типа
     пишущей  машинки,  то  при  этих условиях почти любое программное
     обеспечение   может   считаться   обеспеченным   пользовательским
     интерфейсом.  Эта  технология была применима по той причине,  что
     ЭВМ  работали  под  управлением  операторов,   а   пользователями
     считались  те,  кто  записывал  данные на программных бланках,  а
     затем  читал  распечатки.  Теперь  же   ПЭВМ   стоит   на   столе
     пользователя,   поэтому   для   их   эффективного  взаимодействия
     пользовательский интерфейс должен быть более сложным,  чем ранее.


                                                                        9

     Поскольку    сегодняшний    пользователь    ЭВМ    обычно   имеет
     профессиональные интересы,  выходящие за рамки  программирования,
     то  пользовательский интерфейс должен стимулировать эти интересы,
     а не сдерживать их.

          В интерактивной  системе  в  определенные  моменты   времени
     программа  выводит  пользователю  необходимую  ему  информацию  и
     запрашивает    информацию    у    пользователя    путем    выдачи
     соответствующей  подсказки.  Затем  программа должна находиться в
     состоянии ожидания,  пока пользователь не введет всю  необходимую
     информацию.  Если  программа  способна проверять на достоверность
     введенную информацию,  то после ввода  данных  пользователем  она
     может  либо продолжить свое выполнение,  либо выдать сообщение об
     ошибке и ожидать ввода новых значений данных.  Если  пользователь
     не  понимает,  что  от  него  требуется,  то он может запросить у
     программы  справочную  информацию.  Умная  программа  располагает
     множеством  полезных  сообщений,  которые  выдаются пользователю,
     если он запрашивает справочную информацию,  и разъясняют ему, что
     от него требуется.

          Форматы ввода   данных   могут  быть  различными,  поскольку
     существует много различных  классов  данных.  Эти  классы  данных
     могут  быть  в  общем случае разбиты на две категории:  команды и
     значения данных.

          Команда может быть простой,  как, например, нажатие одной из
     функциональных клавиш,  которая в  системах  текстовой  обработки
     обозначает   переход  к  новому  параграфу.   Команда  может быть
     сложной,  как,  например, загадочный набор букв, цифр и символов,
     что  характерно  для  многих  команд  MS-DOS.  Некоторые  команды
     запрашиваются  программой,   как,   например,  ввод ответов "Y" и
     "N",   когда ПЭВМ  переспрашивает,   действительно  ли  вы хотите
     того,   что  вы  от  нее  требуете.  Другие  команды  вводятся по
     инициативе  пользователя,  когда,  например,  вы  просите систему
     текстовой   обработки   сохранить  документ   в  дисковом  файле.
     Программа на ПЭВМ   не   ожидает  ввода именно этой команды,  но,
     тем не менее, принимает ее и выполняет то,  что от нее требуется.
     Иногда  программа может выводить  перечень  допустимых команд, из
     которого вы можете выбрать любую. Этот перечень называется меню.

          Значения данных в свою очередь можно разделить  на  элементы
     данных и текстовую информацию.  Элементами данных являются данные
     определенного формата и назначения. Это, например, значения даты,
     имена,  адреса,  числовые значения, размер одежды, оттенки цвета.
     Проверка достоверности вводимых данных для определенного элемента
     данных может быть произведена по соответствию их формата, длины и
     значения   этому  элементу  данных.   В  противоположность  этому
     текстовая информация  не  имеет определенного  формата,   длины и
     значения.  Системы  баз  данных  обычно  манипулируют  элементами
     данных,     а   системы    обработки   текстовой   информации   -
     соответственно текстовой информацией.

          Интерактивная система   должна   обладать   пользовательским
     интерфейсом,  который облегчает использование клавиатуры и экрана
     для  ввода  данных различного типа,  которые затем обрабатываются
     программой.  IBM  PC  имеет  такую  архитектуру  видеосистемы   и
     клавиатуры,   которая   обеспечивает   возможности  для  создания
     пользовательских интерфейсов различного типа, что уже реализовано
     во многих пакетах программ для IBM PC.





                                                                       10

          Есть различные     способы    отображения    меню,    выдачи
     информационных сообщений, сообщений об ошибках и запросов на ввод
     данных.   Также  существуют  различные  способы  ввода  текстовой
     информации и значений данных,  поступающих от  пользователя.  При
     разработке языка взаимодействия с пользователем программист может
     выбирать   из   существующего   разнообразия   способов.    Выбор
     инструментальных  программных  средств будет оказывать влияние на
     конечный  программный  продукт.  Использование   инструментальных
     программных    средств,   обеспечивающих   эффективный   ввод   и
     отображение данных,  позволяет создавать эффективные  программные
     системы.

          Одним из  наиболее  популярных  в  настоящее  время способов
     организации взаимодействия  с  пользователем  является  работа  с
     окнами.  Окном называется,  как правило, прямоугольная область на
     экране  дисплея  с  видимой  границей,  изображение   в   которой
     формируется   независимо   от   остальной   части   экрана.  Окна
     используются для всех типов взаимодействия с  пользователем:  для
     отображения  меню,  в качестве областей для ввода значений данных
     или текстовой  информации,  для  вывода  сообщений  и  справочной
     информации по требованию пользователя.

          Другим важным  свойством  интерактивных систем,  существенно
     определяющим их качество,  является обеспечение для  пользователя
     возможности  быстро  переходить  от  одной  задачи  к  другой без
     утомительных  выходов в операционную  систему.  В интегрированной
     программной системе такого рода  переходы зачастую обеспечиваются
     операционной средой,   в которой исполняется  программа.  Однако,
     при увеличении  числа независимых задач,   для которых необходимо
     обеспечить  в  асинхронном  режиме  быстрый  переход   от   одной
     задачи   к другой,  возможности однозадачной операционной системы
     DOS для IBM PC могут быть превышены.  Для обеспечения возможности
     переключениязадач    в    этом    случае   должны  использоваться
     резидентные  в памятипрограммы.   Эти  программы  не обеспечивают
     настоящего  мультизадачного   режима,   но  позволяют  установить
     удобный для  пользователя режим использования  некоторых утилит в
     командной среде DOS.

          Программы из  этой  книги  образуют  библиотеку  программных
     инструментальных средств, использующих окна для ввода текстовых и
     числовых  данных,  выдачи  справочной  информации  пользователю и
     организации меню.  Эти программы могут быть сделаны резидентными.
     Программные модули библиотеки написаны для компилятора Турбо Си и
     предназначены для использования  программами,  также  написанными
     для  Турбо  Си.  Для  того  чтобы  использовать программы из этой
     книги,  вы должны  иметь  общее  представление  о  DOS  и  о  тех
     средствах,   которые  она  предоставляет  программисту.  В  книге
     разбираются вопросы внутренней организации DOS, а также некоторые
     из ее функций, обеспечивающие резидентность программ и по которым
     нет документации. Отличным справочным руководством по программным
     средствам  DOS  и  ROM-BIOS  является книга "Advanced MS-DOS" Рэя
     Дункана (Microsoft Press,  1986). Данная же книга содержит только
     сведения,   необходимые   для   изложения   вопросов,  касающихся
     предлагаемой   программистам   библиотеки.   Дункан   с   иронией
     представляет  свою  книгу,  как  нечто облегченное,  но вы должны
     отнестись к ней со всей серьезностью.

           Программное обеспечение   из   этой   книги   может    быть
     представлено в виде шести уровней,  как на рисунке 1.1. Уровни на
     диаграмме располагаются сверху вниз, но изложение материала будет
     соответствовать движению от нижних уровней к верхним.



                                                                       11

                      ┌───────────────────┐
                      │                   │
      Уровень 1       │  TSR - драйвер    │
                      │                   │
                      └─────────┬─────────┘
                                │
                                │
                      ┌─────────┴──────────┐
      Уровень 2       │                    │
                      │  Загрузочный       │
                      │           модуль   │
                      │                    │
                      └─────────┬──────────┘
                                │
      Уровень 3                 │
           ┌──────────────┬───┬─┴─┬───┬────┬───┐
           │              │   │   │   │    │   │
         ┌─┴────────────┐ │   │   │   │    │   │
         │              │ │   │   │   │    │   │
         │  NOTEPAD     │ │   │   │   │    │   │
         │   ┌──────────┴─┴─┐ │   │   │    │   │
         └─┬─┤              │ │   │   │    │   │
           │ │ TEST MOVE    │ │   │   │    │   │
           │ │   ┌──────────┴─┴─┐ │   │    │   │
           │ └─┬─┤              │ │   │    │   │
           │   │ │ PROMOTE      │ │   │    │   │
           │   │ │   ┌──────────┴─┴─┐ │    │   │
           │   │ └─┬─┤              │ │    │   │
           │   │   │ │ FAST TEST    │ │    │   │
           │   │   │ │   ┌──────────┴─┴─┐  │   │
           │   │   │ └─┬─┤              │  │   │
           │   │   │   │ │ SAYINGS      │  │   │
           │   │   │   │ │   ┌──────────┴──┴┐  │
           │   │   │   │ └─┬─┤              │  │
           │   │   │   │   │ │ POETRY       │  │
           │   │   │   │   │ │   ┌──────────┴──┴─┐
           │   │   │   │   │ └─┬─┤               │
           │   │   │   │   │   │ │ ORDENT        │
           │   │   │   │   │   │ │               │
           │   │   │   │   │   │ └─────────────┬─┘
           └───┴───┴───┴───┴───┴──────┬────────┘
                                      │
      Уровень 4 ┌──────────────┬──────┴──────┬──────────────┐
           ┌────┴──────┐ ┌─────┴─────┐ ┌─────┴──────┐ ┌─────┴────┐
           │           │ │           │ │            │ │          │
           │ Справочник│ │ Редактор  │ │   Меню     │ │   Ввод   │
           │           │ │           │ │            │ │          │
           └────┬──────┘ └─────┬─────┘ └──────┬─────┘ └─────┬────┘
                └──────────────┴───┬──────────┴─────────────┘
                                   │
                      ┌────────────┴────────────┐
      Уровень 5       │                         │
                      │  Функции  управления    │
                      │        окнами           │
                      │                         │
                      └────────────┬────────────┘
                                   │
                      ┌────────────┴─────────────┐
      Уровень 6       │  Функции  управления     │
                      │       аппаратурой        │
                      │         IBM PC           │
                      └──────────────────────────┘

               Рисунок 1.1. Уровни программного обеспечения.
                                                                       12

          Уровень 6 представляет библиотеку  функций  нижнего  уровня,
     которые управляют определенными действиями IBM PC.

          Уровень 5  представляет  библиотеку  функций  для  работы  с
     окнами,  которые управляют размещением,  отображением на экране и
     сохранением в памяти экранных окон.

          Уровень 4  объединяет  функции,  которые используют окна для
     конкретных      применений.       Эти      функции      управляют
     контекстно-чувствительными  окнами  со   справочной  информацией,
     окнами редактирования текста,  системами меню и окнами  для ввода
     данных по формату.

          Уровень 3 соответствует прикладным программам  и представлен
     здесь   примерами  программ,  иллюстрирующих применение библиотек
     нижнего уровня.

          Уровень 2 представляет собой управляющую  программу, которая
     связывает   прикладные  программы  предыдущего  уровня  в  единую
     программу,  управляемую  с  помощью  меню.  Эта  программа  может
     работать  как автономно,  так и в качестве резидентной утилиты на
     последующем уровне программного обеспечения.

          Уровень  1  представляет  драйвер  TSR,   который  строит из
     транзитных  модулей  программы,   остающиеся  резидентными  после
     завершения выполнения.   В  данном  примере  он  используется для
     объединения   программ предыдущих  уровней  в  единую резидентную
     утилиту.

          Перед  тем   как  погрузиться   в  глубины  программирования
     модулей,   резидентных в памяти и работающих с окнами,  возможно,
     вам захочется почитать что-нибудь по языку Си.    Вы можете найти
     интересующие  вас сведения  в  данной  книге.  Раздел  2 содержит
     краткое изложение истории языка Си и  попытку объяснения,  почему
     же  программисты  так  любят  этот  язык.   Раздел  3  продолжает
     рассмотрение компилятора  Турбо  Си,  выбранного  для  изучения в
     данной книге.



























                                                                       13