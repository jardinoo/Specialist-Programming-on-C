<HTML><HEAD>
<TITLE>Проверка синтаксиса в рекурсивном нисходящем анализаторе</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1251"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#24">Содержание</A> | <A href="2405.htm">&lt;&lt;&lt;</A> | <A href="../25/25.htm">&gt;&gt;&gt;</A><HR>
<H1>Проверка синтаксиса в рекурсивном нисходящем анализаторе</H1>
<P class="tj">При разборе выражений синтаксическая ошибка — это просто ситуация, в которой входное выражение не соответствует строгим правилам анализатора. В большинстве случаев это происходит из-за ошибки человека — обычно из-за опечаток. Например, следующие выражения не являются правильными с точки зрения анализаторов, рассмотренных в данной главе:
<PRE>
10 ** 8
(10 - 5) * 9
/8
</PRE>
<P class="tj">В первом из них встречаются два оператора подряд, во втором не сбалансированы скобки, а последнее начинается со знака деления. Ни одна из таких последовательностей не допускается рассмотренными анализаторами. Поскольку при наличии синтаксических ошибок анализатор может выдать неправильный результат, необходимо следить, чтобы подобных ошибок не было.
<P class="tj">При изучении кода анализаторов вы, вероятно, заметили функцию <KBD>serror()</KBD>, вызываемую в определенных ситуациях. Эта функция сообщает об ошибках. В отличие от многих других типов анализаторов, рекурсивный спуск облегчает проверку синтаксиса, поскольку в большинстве случаев она происходит в функциях <KBD>atom()</KBD>, <KBD>find_var()</KBD> и <KBD>eval_exp6()</KBD>, где выполняется проверка правильной расстановки скобок. Единственная проблема, связанная с выявлением синтаксических ошибок, заключается в том, что при обнаружении ошибки разбор выражения не прекращается. Это может привести к выводу нескольких сообщений об ошибках.
<P class="tj">Лучший способ реализации функции <KBD>serror()</KBD> — заставить ее выполнять нечто вроде восстановления правильного состояния анализатора. Например, все современные компиляторы поставляются вместе с парой вспомогательных функций <KBD>setjmp()</KBD> и <KBD>longjmp()</KBD>. Эти функции позволяют осуществить в программе передачу управления из одной функции в <I>другую</I>. Например, функция <KBD>serror()</KBD> могла бы выполнять длинный переход с помошью <KBD>longjmp()</KBD> в безопасную точку программы за пределами анализатора.
<P class="tj">Если вы оставите код анализатора без изменений, могут выводиться сразу несколько сообщений о синтаксических ошибках. Конечно, в одних ситуациях это может мешать, но в других может быть очень полезным, поскольку появляется возможность выявить сразу несколько ошибок. Тем не менее, в общем случае перед тем как использовать анализатор в коммерческих программах, необходимо доработать его блок синтаксического контроля.
<HR><A href="../main.htm#24">Содержание</A> | <A href="2405.htm">&lt;&lt;&lt;</A> | <A href="../25/25.htm">&gt;&gt;&gt;</A>
</BODY></HTML>