<HTML><HEAD>
<TITLE>Функции fprinf() и fscanf()</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1251"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#09">Содержание</A> | <A href="0906.htm">&lt;&lt;&lt;</A> | <A href="0908.htm">&gt;&gt;&gt;</A><HR>
<H1>Функции fprinf() и fscanf()</H1>
<P class="tj">Кроме основных функций ввода/вывода, о которых шла речь, в системе ввода/вывода языка С также имеются функции <KBD>fprintf()</KBD> и <KBD>fscanf()</KBD>. Эти две функции, за исключением того, что предназначены для работы с файлами, ведут себя точно так же, как и <KBD>printf()</KBD> и <KBD>scanf()</KBD>. Прототипы функций <KBD>fprintf()</KBD> и <KBD>fscanf()</KBD> следующие:
<PRE>
int fprintf(FILE *<I>уф</I>, const char *<I>управляющая_строка</I>, ...);
int fscanf(FILE *<I>уф</I>, const char *<I>управляющая_строка</I>, ...);
</PRE>
<P class="t">где <I>уф</I> — указатель файла, возвращаемый в результате вызова <KBD>fopen()</KBD>. Операции ввода/вывода функции <KBD>fprintf()</KBD> и <KBD>fscanf()</KBD> выполняют с тем файлом, на который указывает <I>уф</I>.
<P class="tj">В качестве примера предлагается рассмотреть следующую программу, которая читает с клавиатуры строку и целое значение, а затем записывает их в файл на диске; имя этого файла — TEST. После этого программа читает этот файл и выводит информацию на экран. После запуска программы проверьте, каким получится файл TEST. Как вы и увидите, в нем будет вполне удобочитаемый текст.
<PRE>
/* пример использования fscanf() и fprintf() */
#include &lt;stdio.h&gt;
#include &lt;io.h&gt;
#include &lt;stdlib.h&gt;

int main(void)
{
  FILE *fp;
  char s[80];
  int t;

  if((fp=fopen("test", "w")) == NULL) {
    printf("Ошибка открытия файла.\n");
    exit(1);
  }

  printf("Введите строку и число: ");
  fscanf(stdin, "%s%d", s, &t); /* читать с клавиатуры */

  fprintf(fp, "%s %d", s, t); /* писать в файл */
  fclose(fp); 

  if((fp=fopen("test","r")) == NULL) {
    printf("Ошибка при открытии файла.\n");
    exit(1);
  }

  fscanf(fp, "%s%d", s, &t); /* чтение из файла */
  fprintf(stdout, "%s %d", s, t); /* вывод на экран */

  return 0;
}
</PRE>
<P class="tj">Маленькое предупреждение. Хотя читать разносортные данные из файлов на дисках и писать их в файлы, расположенные также на дисках, часто легче всего именно с помошью функций <KBD>fprintf()</KBD> и <KBD>fscanf()</KBD>, но это не всегда самый эффективный способ выполнения операций чтения и записи. Так как данные в формате ASCII записываются так, как они должны появиться на экране (а не в двоичном виде), то каждый вызов этих функций сопряжен с определенными накладными расходами. Поэтому, если надо заботиться о размере файла или скорости, то, скорее всего, придется использовать <KBD>fread()</KBD> и <KBD>fwrite()</KBD>.
<HR><A href="../main.htm#09">Содержание</A> | <A href="0906.htm">&lt;&lt;&lt;</A> | <A href="0908.htm">&gt;&gt;&gt;</A>
</BODY></HTML>