<HTML><HEAD>
<TITLE>С - язык среднего уровня</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1251"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#01">Содержание</A> | <A href="0101.htm">&lt;&lt;&lt;</A> | <A href="0103.htm">&gt;&gt;&gt;</A><HR>
<H1>С - язык среднего уровня</H1>
<P class="tj">Язык С часто называют языком программирования среднего уровня. Но это не значит, что С менее мощный, менее развитой или более трудный в использовании, чем языки высокого уровня, такие как Basic или Pascal. Это также не значит, что С такой же громоздкий и неудобный, как ассемблер. Языком среднего уровня его называют скорее потому, что он объединяет в себе лучшие черты языков высокого уровня с возможностями ассемблера. В табл. 1.1 показано, какое место занимает С среди других языков программирования.</P>
<TABLE align=center border=1 width=100%>
<CAPTION><B>Таблица 1.1. Место языка C среди других языков программирования</B><CAPTION>
<TR><TD valign=top>Языки высокого уровня<TD><UL><LI>Ada<LI>Modula-2<LI>Pascal<LI>COBOL<LI>FORTRAN<LI>Basic</UL>
<TR><TD valign=top>Языки среднего уровня<TD><UL><LI>Java<LI>C++<LI>C<LI>FORTH</UL>
<TR><TD valign=top>Языки низкого уровня<TD><UL><LI>Макроассемблер<LI>Ассемблер</UL>
</TABLE>
<P class="tj">Как язык среднего уровня С позволяет манипулировать битами, байтами и адресами, то есть теми базовыми элементами данных, с которыми работает компьютер. Несмотря на это программа, написанная на С, обладает высокой переносимостью. <I>Переносимость</I> — это свойство программного обеспечения, созданного для одного типа компьютера или операционной системы, позволяющее легко переделать его для другого типа, т.е. перенести в другую вычислительную среду. Например, если программу, работающую под управлением DOS, легко переделать так, чтобы она работала под управлением Windows 2000, то такая программа называется <I>переносимой</I><SUP><A href="#11" name="1">[1]</A></SUP>.
<P class="tj">Все языки высокого уровня придерживаются концепции <I>типов данных</I>. <I>Тип данных</I> представляет собой набор значений, хранящихся в переменных, а также набор операций, выполнение которых допускается над этими значениями. Обычные типы данных — это целые числа, символы и числа с плавающей точкой. Язык С имеет несколько встроенных типов данных, однако он не является сильно типизированным языком, как Pascal или Ada. В языке С допускаются почти все преобразования типов. Например, в выражениях можно свободно смешивать переменные символьного и целого типов.
<P class="tj">В отличие от большинства языков высокого уровня, в С почти отсутствует контроль ошибок в процессе выполнения программы. Например, не проверяется нарушение границ массивов. Ответственность за подобные ошибки полностью возлагается на программиста.
<P class="tj">Аналогично этому С не требует строгой совместимости параметров и аргументов функций. В языках программирования высокого уровня обычно необходимо, чтобы тип аргумента более или менее соответствовал типу параметра. Для С это не характерно, здесь аргумент может иметь почти любой тип, если его можно разумно преобразовать в тип параметра. Более того, компилятор С автоматически осуществляет все виды необходимых преобразований.
<P class="tj">Отличительной особенностью языка С является возможность манипулирования непосредственно битами, байтами, словами и указателями. Поэтому С хорошо приспособлен для системного программирования.
<P class="tj">Другая важная особенность С — это малое количество ключевых слов, составляющих команды языка. В С89 определено 32 ключевых слова, причем в С99 добавлено только 5 слов. Языки высокого уровня обычно имеют значительно больше ключевых слов, например, в большинстве версий языка Basic их количество превышает сотню!
<P><IMG src="../work/sup.bmp" alt="----------">
<BLOCKQUOTE>
<P class="tj"><SUP><A href="#1" name="11">[1]</A></SUP>А также <I>машинонезависимой</I>, <I>мобильной</I>, а иногда даже <I>портабильной</I>.
</BLOCKQUOTE>
<HR><A href="../main.htm#01">Содержание</A> | <A href="0101.htm">&lt;&lt;&lt;</A> | <A href="0103.htm">&gt;&gt;&gt;</A>
</BODY></HTML>