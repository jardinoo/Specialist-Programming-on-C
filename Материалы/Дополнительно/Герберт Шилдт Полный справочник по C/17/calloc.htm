<HTML><HEAD>
<TITLE>Функция calloc</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1251"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#17">Содержание</A> | <A href="17.htm#00">Глава 17</A><HR>
<H1>Функция calloc</H1>
<PRE>
#include &lt;stdlib.h&gt; 
void *calloc(size_t <I>num</I>, size_t <I>size</I>);
</PRE>
<P class="tj">Функция <KBD>calloc()</KBD> выделяет память, размер которой равен значению выражения <I>num * size</I>, т.е. память, достаточную для размещения массива, содержащего <I>num</I> объектов размером <I>size</I>. Все биты распределенной памяти инициализируются нулями.
<P class="tj">Функция <KBD>calloc()</KBD> возвращает указатель на первый байт выделенной области памяти. Если для удовлетворения запроса нет достаточного объема памяти, возвращается нулевой указатель. Перед попыткой использовать распределенную память важно проверить, что возвращаемое значение не равно нулю.
<H2>Пример</H2>
<P class="tj">Эта функция возвращает указатель на динамически распределенный блок памяти для массива из 100 чисел типа <KBD>float</KBD>:
<PRE>
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;

float *get_mem(void)
{
  float *p;

  p = calloc(100, sizeof(float));
  if(!p) {
    printf("Ошибка при распределении памяти\n");
    exit(1);
  }
    return p;
}
</PRE>
<H2>Зависимые функции</H2>
<A href="free.htm">free()</A>  <A href="malloc.htm">malloc()</A>  <A href="realloc.htm">realloc()</A>
<HR><A href="../main.htm#17">Содержание</A> | <A href="17.htm#00">Глава 17</A>
</BODY></HTML>