<HTML><HEAD>
<TITLE>Функции динамического распределения памяти</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1251"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#17">Содержание</A><HR>
<H1>Функции динамического распределения памяти</H1>
<P class="tj">В той главе описаны функции динамического распределения памяти в языке C. Основные среди них - <KBD>malloc()</KBD> и <KBD>free()</KBD>. При каждом вызове <KBD>malloc()</KBD> распределяется часть остающейся памяти. Каждый вызов <KBD>free()</KBD> возвращает память системе. Область свободной памяти, в которой распределяется память, называется динамически распределяемой областью памяти или <I>кучей (heap)</I>. Прототипы функций динамического распределения памяти находятся в <KBD>&lt;stdlib.h&gt;</KBD></P>
<TABLE align=center border=1 width=100%>
<TR><TD align=center bgcolor=skyblue width=7%>На заметку<TD class="tj">Обзор динамического распределения памяти вы найдете в <A href="../05/05.htm">главе 5</A>.
</TABLE>
<P class="tj">В стандарте языка C определено четыре функции динамического распределения памяти, которые поддерживаются всеми трансляторами: <KBD>calloc()</KBD>, <KBD>malloc()</KBD>, <KBD>free()</KBD> и <KBD>realloc()</KBD>. Однако конкретный транслятор почти наверняка содержит несколько версий этих функций, в которых учтены различные возможности и особенности среды. Например, с трансляторами, генерирующими код для сегментированной модели памяти процессора 8086, поставляются спецефические функции распределения. Для получения подробных сведений и описания дополнительных функций распределения памяти обратитесь к документации по компилятору.</P>
<A name="00"></A>
<A href="calloc.htm">calloc</A><BR>
<A href="free.htm">free</A><BR>
<A href="malloc.htm">malloc</A><BR>
<A href="realloc.htm">realloc</A><BR>
<HR><A href="../main.htm#17">Содержание</A>
</BODY></HTML>