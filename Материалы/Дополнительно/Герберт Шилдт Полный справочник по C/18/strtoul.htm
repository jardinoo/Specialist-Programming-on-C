<HTML><HEAD>
<TITLE>Функция strtoul</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1251"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#18">Содержание</A> | <A href="18.htm#00">Глава 18</A><HR>
<H1>Функция strtoul</H1>
<PRE>
#include &lt;stdlib.h&gt;
unsigned long int strtoul(const char *<I>start</I>, char **<I>end</I>, int <I>radix</I>);
</PRE>
<P class="tj">Функция <KBD>strtoul()</KBD> преобразует строковое представление числа, которое содержится в строке, адресуемой параметром <I>start</I>, в значение типа <KBD>unsigned long</KBD> и возвращает полученный результат. Основание системы счисления, в которой представлено число, определяется параметром <I>radix</I>. Если значение <I>radix</I> равно нулю, то основание определяется так же, как и основание системы счисления при записи констант. Если значение <I>radix</I> не равно нулю, то оно должно быть целым числом от 2 до 36.
<P class="tj">В версии С99 к параметрам <I>start</I> и <I>end</I> применен квалификатор <KBD>restrict</KBD>.
<P class="tj">Функция <KBD>strtoul()</KBD> работает следующим образом:
<P class="tj">Сначала в строке, адресуемой параметром <I>start</I>, пропускаются пробелы, символы табуляции и пустой строки. Затем считывается число. Считывание заканчивается как только будет обнаружен символ, который не может быть частью длинного целого числа без знака. К таким символам относятся пробелы, символы табуляции и пустой строки, знаки препинания и другие символы. Наконец, параметр <I>end</I> устанавливается так, чтобы указывать на "неиспользованный" остаток исходной строки, если такой существует. Например, если функция <KBD>strtoul()</KBD> вызывается с аргументом <PRE>"100 клещей"</PRE><P class="t">то она возвратит значение<PRE>100L</PRE><P class="t">а параметр <I>end</I> будет указывать на пробел, предшествующий слову<PRE>"клещей"</PRE>
<P class="tj">Если результат не может быть представлен как длинное целое без знака, функция <KBD>strtoul()</KBD> возвращает значение <KBD>ULONG_MAX</KBD>, а глобальная переменная <KBD>errno</KBD> устанавливается равной значению <KBD>ERANGE</KBD>, что свидетельствует об ошибке из-за выхода результата за пределы представимых чисел. Если параметр <I>start</I> не указывает на число, никакого преобразования не выполняется и функция возвращает нуль.
<H2>Пример</H2>
<P class="tj">Следующая функция может использоваться для чтения из стандартного входного потока числа, представленного в шестнадцатеричной системе счисления. Данная функция возвращает результат (целое число) типа <KBD>unsigned long</KBD>.
<PRE>
unsigned long int read_unsigned_long(void)
{
  char start[80], *end;

  printf("Введите шестнадцатеричное число: ");
  gets(start);
  return strtoul(start, &end, 16);
}
</PRE>
<H2>Зависимые функции</H2>
<A href="strtol.htm">strtol()</A>  <A href="strtoull.htm">strtoull()</A>
<HR><A href="../main.htm#18">Содержание</A> | <A href="18.htm#00">Глава 18</A>
</BODY></HTML>