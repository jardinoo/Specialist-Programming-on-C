<HTML><HEAD>
<TITLE>Функция strtod</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1251"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#18">Содержание</A> | <A href="18.htm#00">Глава 18</A><HR>
<H1>Функция strtod</H1>
<PRE>
#include &lt;stdlib.h&gt;
double strtod(const char *<I>start</I>, char **<I>end</I>);
</PRE>
<P class="tj">Функция <KBD>strtod()</KBD> преобразует строковое представление числа, которое содержится в строке, адресуемой параметром <I>start</I>, в значение типа <KBD>double</KBD> и возвращает полученный результат.
<P class="tj">В версии С99 к параметрам <I>start</I> и <I>end</I> применен квалификатор <KBD>restrict</KBD>.
<P class="tj">Функция <KBD>strtod()</KBD> работает следующим образом:
<P class="tj">Сначала в строке, адресуемой параметром <I>start</I>, пропускаются пробелы, символы табуляции и пустой строки. Затем считываются символы, составляющие число. Когда считывается символ, который не может встречаться в записи числа с плавающей точкой, считывание прекращается. К таким символам относятся пробелы, символы табуляции и пустой строки, знаки препинания (но не точки) и символы, отличные от букв "Е" и "е". Наконец, параметр-указатель <I>end</I> устанавливается так, чтобы указывать на "неиспользованный" остаток исходной строки, если таковой существует. Это означает, что, если функция <KBD>strtod()</KBD> вызывается с аргументом <PRE>"100.00 плоскогубцев"</PRE><P class="t">то она возвратит значение <PRE>100.00</PRE><P class="t">а параметр-указатель <I>end</I> будет указывать на пробел, предшествующий слову <PRE>"плоскогубцев"</PRE>
<P class="tj">При возникновении переполнения функция <KBD>strtod()</KBD> возвращает либо значение <KBD>HUGE_VAL</KBD>, либо значение <KBD>-HUGE_VAL</KBD> (означающее положительное или отрицательное переполнение соответственно), а глобальная переменная <KBD>errno</KBD> устанавливается равной значению <KBD>ERANGE</KBD>, свидетельствующему об ошибке из-за выхода результата за пределы представимых чисел. При потере значимости возвращается нуль, а глобальная переменная <KBD>errno</KBD> устанавливается равной значению <KBD>ERANGE</KBD>. Если параметр <I>start</I> не указывает на число, никакого преобразования не выполняется и функция возвращает нуль.
<H2>Пример</H2>
<P class="tj">Следующая программа читает числа с плавающей точкой из массива символов.
<PRE>
#include &lt;stdlib.h&gt;
#include &lt;ctype.h&gt;
#include &lt;stdio.h&gt;

int main(void)
{
  char *end, *start = "100.00 плоскогубцев 200.00 молотков";

  end = start;
  while(*start) {
    printf("%f, ", strtod(start, &end));
    printf("Остаток: %s\n" ,end);
    start = end;
    /* пропускает символы не входящие в числа */
    while(!isdigit(*start) && *start) start++;
  }

  return 0;
}
</PRE>
<P class="tj">Вот что выводит эта программа:
<PRE>100.000000, Остаток: плоскогубцев 200.00 молотков 
200.000000, Остаток: молотков</PRE>
<H2>Зависимые функции</H2>
<A href="atof.htm">atof()</A>  <A href="strtold.htm">strtold()</A>  <A href="strtof.htm">strtof()</A>
<HR><A href="../main.htm#18">Содержание</A> | <A href="18.htm#00">Глава 18</A>
</BODY></HTML>