<HTML><HEAD>
<TITLE>Многоуровневая адресация</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1251"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#05">Содержание</A> | <A href="0505.htm">&lt;&lt;&lt;</A> | <A href="0507.htm">&gt;&gt;&gt;</A><HR>
<H1>Многоуровневая адресация</H1>
<P class="tj">Иногда указатель может ссылаться на указатель, который ссылается на число. Это называется <I>многоуровневой адресацией</I>. Иногда применение таких указателей существенно усложняет программу, делает ее плохо читаемой и подверженной ошибкам. Рис. 5.3 иллюстрирует концепцию многоуровневой адресации. На рисунке видно, что значением "нормального" указателя является адрес объекта, содержащего нужное значение. В случае двухуровневой адресации первый указатель содержит адрес второго указателя, который содержит адрес объекта с нужным значением.
<P class="tj">Многоуровневая адресация может иметь сколько угодно уровней, однако уровни глубже второго, т.е. указатели более глубокие, чем "указатели на указатели" применяются крайне редко. Дело в том, что при использовании таких указателей часто встречаются концептуальные ошибки из-за того, что смысл таких указателей представить трудно.</P>
<TABLE align=center border=1 width=100%>
<TR><TD align=center bgcolor=skyblue width=7%>На заметку<TD class="tj">Не следует путать многоуровневую адресацию с многоуровневыми структурами данных, использующими указатели, такими, например, как связные списки. Это фундаментально различные концепции.
</TABLE>
<P class="tj">Переменная, являющаяся указателем на указатель, должна быть соответствующим образом объявлена. Это делается с помощью двух звездочек перед именем переменной. Например, в следующем операторе <KBD>newbalance</KBD> объявлена как указатель на указатель на переменную типа <KBD>float</KBD>:
<PRE>float **newbalance;</PRE>
<P class="tj">Следует хорошо понимать, что <KBD>newbalance</KBD> — это не указатель на число типа <KBD>float</KBD>, а указатель на указатель на число типа <KBD>float</KBD>.
<TABLE align=center width=100%>
<CAPTION align=bottom><P class="tj"><I>Рис. 5.3. Одноуровневая и многоуровневая адресация</I>
<TR><TD>
<PRE>
       Указатель         Переменная
       +--------+        +--------+
       | Адрес  |------->|Значение|
       +--------+        +--------+
   
          <B>Одноуровневая адресация</B>

Указатель       Указатель       Переменная
+--------+      +--------+      +--------+
| Адрес  |----->| Адрес  |----->|Значение|
+--------+      +--------+      +--------+

          <B>Многоуровневая адресация</B>
</PRE>
</TABLE> 
<P class="tj">При двухуровневой адресации для доступа к значению объекта нужно поставить перед идентификатором две звездочки:
<PRE>
#include &lt;stdio.h&gt;

int main(void)
{
  int x, *p, **q;

  x = 10;
  p = &x;
  q = &p;

  printf("%d", **q); /* печать значения x */

  return 0;
}
</PRE>
<P class="tj">Здесь <KBD>p</KBD> объявлена как указатель на целое, a <KBD>q</KBD> — как указатель на указатель на целое. Функция <KBD>printf()</KBD> выводит на экран число <KBD>10</KBD>.
<HR><A href="../main.htm#05">Содержание</A> | <A href="0505.htm">&lt;&lt;&lt;</A> | <A href="0507.htm">&gt;&gt;&gt;</A>
</BODY></HTML>