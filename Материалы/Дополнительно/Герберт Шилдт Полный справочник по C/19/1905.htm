<HTML><HEAD>
<TITLE>Функции для обработки массивов двухбайтовых символов</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1251"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#19">Содержание</A> | <A href="1904.htm">&lt;&lt;&lt;</A> | <A href="1906.htm">&gt;&gt;&gt;</A><HR>
<H1>Функции для обработки массивов двухбайтовых символов</H1>
<P class="tj">Для стандартных функций, предназначенных для обработки массивов символов (например, для <KBD>memcpy()</KBD>), имеются соответствующие функции, выполняющие аналогичные операции над массивами двухбайтовых символов. Эти функции (перечисленные в следующей табл. 19.5) используют заголовок <KBD>&lt;wchar.h&gt;</KBD>.</P>
<TABLE align=center border=1 width=100%>
<CAPTION><B>Таблица 19.5. Функции для обработки массивов двухбайтовых символов и соответствующие им функции для типа <KBD>char</KBD></B></CAPTION>
<TR><TH><I>Функция</I><TH><I>Соотвествующая функция для типа <KBD>char</KBD></I>
<TR><TD><PRE>wchar_t *wmemchr(const wchar_t *<I>str</I>,
  wchar_t <I>ch</I>, size_t <I>num</I>)</PRE><TD><KBD>memchr()</KBD>
<TR><TD><PRE>int wmemcmp(const wchar_t *<I>str1</I>,
  const wchar_t *<I>str2</I>, size_t <I>num</I>)</PRE><TD><KBD>memcmp()</KBD>
<TR><TD><PRE>wchar_t *wmemcpy(wchar_t *<I>str1</I>,
  const wchar_t *<I>str2</I>, size_t <I>num</I>)</PRE><TD class="t"><KBD>memcpy()</KBD><BR>В версии С99 к параметрам str1 и str2 применен квалификатор restrict
<TR><TD><PRE>wchar_t *wmemmove(wchar_t *<I>str</I>,
  const wchar_t *<I>str2</I>, size_t <I>num</I>)</PRE><TD><KBD>memmove()</KBD>
<TR><TD><PRE>wchar_t *wmemset(wchar_t *<I>str</I>,
  wchar_t <I>ch</I>, size_t <I>num</I>)</PRE><TD><KBD>memset()</KBD>
</TABLE>
<HR><A href="../main.htm#19">Содержание</A> | <A href="1904.htm">&lt;&lt;&lt;</A> | <A href="1906.htm">&gt;&gt;&gt;</A>
</BODY></HTML>