<HTML><HEAD>
<TITLE>Функции для преобразования многобайтовых и двухбайтовых символов</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1251"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#19">Содержание</A> | <A href="1905.htm">&lt;&lt;&lt;</A> | <A href="../20/20.htm">&gt;&gt;&gt;</A><HR>
<H1>Функции для преобразования многобайтовых и двухбайтовых символов</H1>
<P class="tj">Стандартная библиотека поддерживает различные функции, предназначенные для преобразования многобайтовых и двухбайтовых символов. Эти функции (перечисленные в табл. 19.6) используют заголовок <KBD>&lt;wchar.h&gt;</KBD>. Многие из них представляют собой версии обычных многобайтовых функций, которые могут быть прерваны (и повторно запущены — restartable). Повторно запускаемая версия используя информацию о состоянии, передаваемую ей в параметре типа <KBD>mbstate_t</KBD>. Если этот параметр нулевой, функция предоставит собственный объект типа <KBD>mbstate_t</KBD>.</P>
<TABLE align=center border=1 width=100%>
<CAPTION><B>Таблица 19.6. Функции для преобразования многобайтовых и двухбайтовых символов</B></CAPTION>
<TR><TH><I>Функция</I><TH><I>Описание</I>
<TR><TD><PRE>win_t btowc(int <I>ch</I>)</PRE><TD class="tj">Преобразует параметр <I>ch</I> в его двухбайтовый эквивалент и возвращает результат. Значение <KBD>WEOF</KBD> возвращается при ошибке или если <I>ch</I> не однобайтовый, а многобайтовый символ
<TR><TD><PRE>size_t mbrlen(
  const char *<I>str</I>,
  size_t <I>num</I>,
  mbstate_t *<I>state</I>)</PRE><TD class="tj">Повторно запускаемая версия функции <KBD>mblen()</KBD>, в которой информация о состоянии передается через параметр <I>state</I>. Возвращает положительное число, равное длине следующее	многобайтового символа. Нуль возвращается в случае, если следующий символ — нулевой. При ошибке возвращается отрицательное значение. В версии С99 к параметрам <I>str</I> и <I>state</I> применен квалификатор <KBD>restrict</KBD>
<TR><TD><PRE>size_t mbrtowc(
  wchar_t *<I>out</I>,
  const char *<I>in</I>,
  size_t <I>num</I>,
  mbstate_t *<I>state</I>)</PRE><TD class="tj">Повторно запускаемая версия функции <KBD>mbtowc()</KBD>, в которой информация о состоянии передается через параметр <I>state</I>. Возвращает положительное число, равное длине следующего многобайтового символа. Нуль возвращается в случае, если следующий символ — нулевой. При ошибке возвращается значение -1 и переменной <KBD>errno</KBD> присваивается макрос <KBD>EILSEQ</KBD>. Если преобразование не завершено, возвращается число -2. В версии С99 к параметрам <I>out</I>, <I>in</I> и <I>state</I> применен квалификатор <KBD>restrict</KBD>
<TR><TD><PRE>int mbsinit(
  const mbstate_t *<I>state</I>)</PRE><TD class="tj">Возвращает значение <KBD>true</KBD>, если параметр <I>state</I> представляет начальное состояние процесса преобразования
<TR><TD><PRE>size_t mbsrtowcs(
  wchar_t *<I>out</I>,
  const char **<I>in</I>,
  size_t <I>num</I>,
  mbstate_t *<I>state</I>)</PRE><TD class="tj">Повторно запускаемая версия функции <KBD>mbstowcs()</KBD>, в которой информация о состоянии передается через параметр <I>state</I>. Кроме того, функция <KBD>mbsrtowcs()</KBD> отличается от функции <KBD>mbstowcs()</KBD> тем, что параметр <I>in</I> является косвенным указателем на исходный массив. При ошибке переменной <KBD>errno</KBD> присваивается макрос <KBD>EILSEQ</KBD>. В версии С99 к параметрам <I>out</I>, <I>in</I> и <I>state</I> применен квалификатор <KBD>restrict</KBD>
<TR><TD><PRE>size_t wcrtomb(
  char *<I>out</I>,
  wchar_t <I>ch</I>,
  mbstate_t *<I>state</I>)</PRE><TD class="tj">Повторно запускаемая версия функции <KBD>wctomb()</KBD>, в которой информация о состоянии передается через параметр <I>state</I>. При ошибке переменной <KBD>errno</KBD> присваивается макрос <KBD>EILSEQ</KBD>. В версии С99 к параметрам <I>out</I> и <I>state</I> применен квалификатор <KBD>restrict</KBD>
<TR><TD><PRE>size_t wcsrtombs(
  char *<I>out</I>,
  const wchar_t **<I>in</I>,
  size_t <I>num</I>,
  mbstate_t *<I>state</I>)</PRE><TD class="tj">Повторно запускаемая версия функции <KBD>wcstombs()</KBD>, в которой информация о состоянии передается через параметр <I>state</I>. Кроме того, функция <KBD>wcsrtombs()</KBD> отличается от функции <KBD>wcstombs()</KBD> тем, что параметр <I>in</I> является косвенный указателем на исходный массив. При ошибке переменной <KBD>errno</KBD> присваивается макрос <KBD>EILSEQ</KBD>. В версии С99 к параметрам <I>out</I>, <I>in</I> и <I>state</I> применен квалификатор <KBD>restrict</KBD>
<TR><TD><PRE>int wctob(wint_t <I>ch</I>)</PRE><TD class="tj">Преобразует параметр <I>ch</I> в его однобайтовый эквивалент. При сбое функция возвращает значение <KBD>EOF</KBD>
</TABLE>
<HR><A href="../main.htm#19">Содержание</A> | <A href="1905.htm">&lt;&lt;&lt;</A> | <A href="../20/20.htm">&gt;&gt;&gt;</A>
</BODY></HTML>