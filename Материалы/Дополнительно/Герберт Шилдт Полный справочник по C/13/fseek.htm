<HTML><HEAD>
<TITLE>Функция fseek</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1251"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#13">Содержание</A> | <A href="13.htm#00">Глава 13</A><HR>
<H1>Функция fseek</H1>
<PRE>
#include &lt;stdio.h&gt;
int fseek(FILE *<I>stream</I>, long int <I>offset</I>, int <I>origin</I>);
</PRE>
<P class="tj">Функция <KBD>fseek()</KBD> устанавливает указатель текущей позиции файла, связанного с потоком <I>stream</I>, в соответствии со значениями начала отсчета <I>origin</I> и смещения <I>offset</I>. Назначение этой функции — поддерживать операции ввода/вывода с произвольным доступом. Параметр <I>offset</I> равен количеству байтов, на которые будет смещен внутренний указатель файла относительно начала отсчета, заданного параметром <I>origin</I>. B качестве значения для параметра <I>origin</I> должен быть взят один из следующих макросов (определенных в заголовке <KBD>&lt;stdio.h&gt;</KBD>).</P>
<TABLE align=center border=1 width=100%>
<TR><TH><I>Имя</I><TH><I>Назначение</I>
<TR><TD><KBD>SEEK_SET</KBD><TD>Поиск с начала файла
<TR><TD><KBD>SEEK_CUR</KBD><TD>Поиск с текущей позиции
<TR><TD><KBD>SEEK_END</KBD><TD>Поиск с конца файла
</TABLE>
<P class="tj">Нулевое значение возврата свидетельствует об успешном выполнении функции <KBD>fseek()</KBD>, а ненулевое — о возникновении сбоя.
<P class="tj">Вообще говоря, функцию <KBD>fseek()</KBD> следует использовать только при работе с двоичными файлами. При использовании же с текстовым файлом параметр <I>origin</I> должен иметь значение <KBD>SEEK_SET</KBD>, а параметр <I>offset</I> — значение, полученное в результате вызова функции <KBD>ftell()</KBD> для того же файла, или нуль (чтобы установить указатель текущей позиции файла на начало).
<P class="tj">Функция <KBD>fseek()</KBD> очищает признак конца файла, связанный с заданным потоком. Более того, она аннулирует любой символ, ранее возвращенный в тот же поток через вызов функции <KBD>ungetc()</KBD> (см. раздел <KBD>ungetc</KBD>).
<H2>Пример</H2>
<P class="tj">Приведенная функция производит поиск заданной структуры, имеющей тип <KBD>addr</KBD>. Обратите внимание на использование оператора <KBD>sizeof</KBD> для получения размера структуры.
<PRE>
struct addr {
  char name[40];
  char street[40];
  char city[40];
  char state[3];
  char zip[10];
} info;

void find(long int client_num)
{
  FILE *fp;

  if((fp=fopen("mail", "rb")) == NULL) {
    printf("Не удается открыть файл.\n");
    exit(1);
  }

  /* поиск подходящей структуры */
  fseek(fp, client_num*sizeof(struct addr), SEEK_SET);

  /* считывание данных в память */
  fread(&info, sizeof(struct addr), 1, fp);

  fclose(fp);
}
</PRE>
<H2>Зависимые функции</H2>
<A href="ftell.htm">ftell()</A>  <A href="rewind.htm">rerwind()</A>  <A href="fopen.htm">fopen()</A>  <A href="fgetpos.htm">fgetpos()</A>  <A href="fsetpos.htm">fsetpos()</A>
<HR><A href="../main.htm#13">Содержание</A> | <A href="13.htm#00">Глава 13</A>
</BODY></HTML>