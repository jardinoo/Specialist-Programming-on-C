<HTML><HEAD>
<TITLE>Функция vprintf, vfprintf, vsprintf, vsnprintf</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1251"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#13">Содержание</A> | <A href="13.htm#00">Глава 13</A><HR>
<H1>Функция vprintf, vfprintf, vsprintf, vsnprintf</H1>
<PRE>
#include &lt;stdarg.h&tg;
#include &lt;stdio.h&gt;
int vprintf(char *<I>format</I>, va_list <I>arg_ptr</I>);
int vfprintf(FILE *<I>stream</I>, const char *<I>format</I>, va_list <I>arg_ptr</I>);
int vsprintf(char *<I>buf</I>, const char *<I>format</I>, va_list <I>arg_ptr</I>);
int vsnprintf(char * restrict <I>buf</I>, size_t <I>num</I>, const char * restrict <I>format</I>, va_list <I>arg_ptr</I>);
</PRE>
<P class="tj">Действия функций <KBD>vprintf()</KBD>, <KBD>vfprintf()</KBD>, <KBD>vsprintf()</KBD> и <KBD>vsnprintf()</KBD> эквивалентны действиям функций <KBD>printf()</KBD>, <KBD>fprintf()</KBD>, <KBD>sprintf()</KBD> и <KBD>snprintf()</KBD> соответственно, но список аргументов заменяется указателем на список аргументов. Этот указатель должен иметь тип <KBD>va_list</KBD>, который определен в заголовке <KBD>&lt;stdarg.h&gt;</KBD>.
<P class="tj">В версии C99 к параметрам <I>buf</I> и <I>format</I> применен квалификатор <KBD>restrict</KBD>. Функция <KBD>vsnprintf()</KBD> добавлена в версии C99.
<H2>Пример</H2>
<P class="tj">Данный фрагмент программы иллюстрирует, как нужно вызывать функцию <KBD>vprintf()</KBD>. Вызов функции <KBD>va_start()</KBD> приводит к созданию указателя на список аргументов переменной длины, причем этот указатель указывает на начало списка аргументов. Этот указатель должен быть использован при вызове функции <KBD>vprintf()</KBD>. Вызов функции <KBD>va_end()</KBD> очищает указатель на список аргументов переменной длины.
<PRE>
#include &lt;stdio.h&gt;
#include &lt;stdarg.h&gt;

void print_message(char *format, ...);

int main(void)
{
  print_message("Не удается открыть файл %s.", "test");

  return 0;
}

void print_message(char *format, ...)
{
  va_list ptr; /* извлечение аргумента ptr */

  /* инициализация ptr, он становится указателем на первый аргумент,
     следующий за строкой форматирования
  */
  va_start(ptr, format);

  /* вывод сообщения */
  vprintf(format, ptr);

  va_end(ptr);
}
</PRE>
<H2>Зависимые функции</H2>
<A href="vscanf-vfscanf-vsscanf.htm">vscanf()</A>  <A href="vscanf-vfscanf-vsscanf.htm">vfscanf()</A>  <A href="vscanf-vfscanf-vsscanf.htm">vsscanf()</A>  <A href="../18/va_arg-va_start-va_end-va_copy.htm">va_arg()</A>  <A href="../18/va_arg-va_start-va_end-va_copy.htm">va_start()</A>  <A href="../18/va_arg-va_start-va_end-va_copy.htm">va_end()</A>
<HR><A href="../main.htm#13">Содержание</A> | <A href="13.htm#00">Глава 13</A>
</BODY></HTML>