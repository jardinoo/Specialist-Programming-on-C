<HTML><HEAD>
<TITLE>Функция fopen</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1251"> 
<LINK REL=STYLESHEET TYPE="text/css" HREF="../work/css.css">
</HEAD><BODY>
<A href="../main.htm#13">Содержание</A> | <A href="13.htm#00">Глава 13</A><HR>
<H1>Функция fopen</H1>
<PRE>
#include &lt;stdio.h&gt;
FILE *fopen(const char *<I>fname</I>, const char *<I>mode</I>);
</PRE>
<P class="tj">Функция <KBD>fopen()</KBD> открывает файл, имя которого задается параметром <I>fname</I>, и возвращает указатель на поток, связанный с этим файлом. Типы операций, которые разрешено выполнять с файлом, определяются параметром <I>mode</I>. Возможные значения параметра <I>mode</I> приведены в таблице 13.1. Строка символов, которая будет играть роль имени реального файла, должна определять его имя, допустимое в данной операционной системе. Эта строка может включать спецификацию пути, если среда поддерживает такую возможность.
<P class="tj">В версии C99 к параметрам <I>fname</I> и <I>mode</I> применен квалификатор <KBD>restrict</KBD>.
<P class="tj">Если функция <KBD>fopen()</KBD> успешно открыла заданный файл, она возвращает указатель <KBD>FILE</KBD>. Если файл открыть не удается, возвращается нулевой указатель.</P>
<TABLE align=center border=1 width=100%>
<CAPTION><B>Таблица 13.1. Допустимые значения параметра <I>mode</I> функции <KBD>fopen()</KBD></B></CAPTION>
<TR><TH><I>Режим</I><TH><I>Назначение</I>
<TR><TD>"r"<TD>Открывает текстовый файл для чтения
<TR><TD>"w"<TD>Создает текстовый файл для записи
<TR><TD>"а"<TD>Дописывает в текстовый файл
<TR><TD>"rb"<TD>Открывает двоичный файл для чтения
<TR><TD>"wb"<TD>Создает двоичный файл для записи
<TR><TD>"ab"<TD>Дописывает в двоичный файл
<TR><TD>"r+"<TD>Открывает текстовый файл для чтения и записи
<TR><TD>"w+"<TD>Создает текстовый файл для чтения и записи
<TR><TD>"а+"<TD>Открывает текстовый файл для чтения и записи
<TR><TD>"rb+" или "r+b"<TD>Открывает двоичный файл для чтения и записи
<TR><TD>"wb+" или "w+b"<TD>Создает двоичный файл для чтения и записи
<TR><TD>"ab+" или "а+b"<TD>Открывает двоичный файл для чтения и записи
</TABLE>
<P class="tj">Как видно из таблицы, файл можно открывать либо в текстовом, либо в двоичном режиме. В текстовом режиме выполняются преобразования некоторых символов. Например, символы новой строки преобразуются в комбинацию кодов возврата каретки (ASCII 13) и конца строки (ASCII 10). В двоичном режиме подобные преобразования не выполняются.
<P class="tj">В следующем фрагменте программы иллюстрируется корректный способ открытия файла.
<PRE>
FILE *fp;

if ((fp = fopen("test", "w"))==NULL) {
  printf("He удается открыть файл.\n");
  exit(1);
}
</PRE>
<P class="tj">Благодаря такому методу перед записью в файл выявляется любая ошибка, возникающая при его открытии, например, использование защищенного от записи или заполненного диска.
<P class="tj">Если с помощью функции <KBD>fopen()</KBD> открывается файл для вывода (записи), то любой уже существующий файл с заданным именем удаляется, а вместо него создается новый. Если файл с таким именем не существует, он будет создан. Чтобы открыть файл для выполнения операций чтения, нужно, чтобы этот файл уже существовал. В противном случае функция возвратит значение ошибки. Чтобы добавить данные в конец файла, необходимо использовать режим <KBD>"а"</KBD>. Если окажется, что указанный файл не существует, он будет создан.
<P class="tj">Осуществляя доступ к файлу, который открыт для чтения и записи, не следует сразу за операцией ввода выполнять операцию вывода, не прибегнув прежде к промежуточному вызову одной из следующих функций: <KBD>fflush()</KBD>, <KBD>fseek()</KBD>, <KBD>fsetpos()</KBD> или <KBD>rewind()</KBD>. Нельзя также сразу за операцией вывода выполнять операцию ввода, не прибегнув прежде к промежуточному вызову одной из перечисленных выше функций. Исключением является момент достижения конца файла во время операции ввода, т.e. в конце файла вывод может непосредственно следовать за вводом.
<P class="tj">Максимальное количество файлов, которые могут быть открыты одновременно, ограничивается значением <KBD>FOPEN_MAX</KBD>, определенным в заголовке <KBD>&lt;stdio.h&gt;</KBD>.
<H2>Пример</H2>
<P class="tj">Следующий фрагмент открывает файл с названием TEST для чтения-записи в двоичном режиме.
<PRE>
FILE *fp;

if((fp=fopen("test", "rb+"))==NULL) {
  printf("He удается открыть файл.\n");
  exit(1);
}
</PRE>
<H2>Зависимые функции</H2>
<A href="fclose.htm">fclose()</A>  <A href="fread.htm">fread()</A>  <A href="fwrite.htm">fwrite()</A>  <A href="putc.htm">putc()</A>  <A href="getc.htm">getc()</A>
<HR><A href="../main.htm#13">Содержание</A> | <A href="13.htm#00">Глава 13</A>
</BODY></HTML>